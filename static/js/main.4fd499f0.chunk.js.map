{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Footer","Content","Sider","App","state","matrix","vector","row","col","value","updated","this","slice","target","setState","_this2","det","math","oneOverDet","inverseStr","inverse","_arr","_i","length","frac","push","d","s","n","sol","solStr","_i2","inverseMatStr","matStr","vecStr","react_default","a","createElement","layout","style","height","color","width","margin","type","justify","align","padding","react_katex","input","size","onChange","updateMatrix","updateVector","replace","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4fd499f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as math from 'mathjs';\n\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport { InputNumber, Input } from 'antd';\nimport { Layout } from 'antd';\nimport { Row, Col } from 'antd';\n\nimport './App.css';\nimport 'katex/dist/katex.min.css';\nimport \"antd/dist/antd.css\";\n\nconst {\n  Header, Footer, Sider, Content,\n} = Layout;\n\nclass App extends Component {\n\n  state = {\n    matrix: [\n      [1, 2],\n      [3, 4]],\n    vector: [5, 6]\n  }\n\n  updateMatrix(row, col, value) {\n    let updated = this.state.matrix.slice(0);\n    updated[row][col] = +value.target.value;\n    this.setState({\n      matrix: updated\n    });\n  }\n\n  updateVector(row, value) {\n    let updated = this.state.vector.slice(0);\n    updated[row] = +value.target.value;\n    this.setState({\n      vector: updated\n    })\n  }\n\n  render() {\n    const matrix = this.state.matrix;\n    const vector = this.state.vector;\n\n    const det = math.number(matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]);\n    const oneOverDet = math.fraction(1, det);\n\n    const inverseStr = [];\n    const inverse = [];\n    for (const value of [matrix[1][1], -matrix[0][1], -matrix[1][0], matrix[0][0]]) {\n      const frac = math.multiply(oneOverDet, value);\n      inverse.push(frac);\n      inverseStr.push(frac.d === 1 ? (frac.s === -1 ? \"-\" : \"\") + frac.n : (\"\\\\frac{\" + (frac.s === -1 ? \"-\" : \"\") + frac.n + \"}{\" + frac.d + \"}\"));\n    }\n    const sol = [\n      math.add(math.multiply(inverse[0], vector[0]), math.multiply(inverse[1], vector[1])),\n      math.add(math.multiply(inverse[2], vector[0]), math.multiply(inverse[3], vector[1]))\n    ];\n    const solStr = [];\n    for (const frac of sol) {\n      solStr.push(frac.d === 1 ? (frac.s === -1 ? \"-\" : \"\") + frac.n : (\"\\\\frac{\" + (frac.s === -1 ? \"-\" : \"\") + frac.n + \"}{\" + frac.d + \"}\"));\n    }\n\n    const inverseMatStr = \"\\\\begin{bmatrix}\" + inverseStr[0] + \" & \" + inverseStr[1] + \" \\\\\\\\ \" + inverseStr[2] + \" & \" + inverseStr[3] + \" \\\\end{bmatrix}\";\n    const matStr = \"\\\\begin{bmatrix}\" + matrix[0][0] + \" & \" + matrix[0][1] + \" \\\\\\\\ \" + matrix[1][0] + \" & \" + matrix[1][1] + \" \\\\end{bmatrix}\";\n    const vecStr = \"\\\\begin{bmatrix}\" + vector[0] + \" \\\\\\\\ \" + vector[1] + \" \\\\end{bmatrix}\";\n\n    return (\n      <Layout style={{ height: \"100%\" }}>\n        <Header>\n          <h1 style={{ color: \"white\" }}>Solve That System</h1>\n        </Header>\n        <Content>\n          <div style={{ width: 500, margin: \"0px auto\" }}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ padding: 2 }}>\n              <Col>\n                Here's a trick I learned in linear algebra for solving a system of two equations in two variables using an inverse matrix. This method actually works for any square system, but finding the inverses of higher rank matrices is significantly less straightforward.\n              </Col>\n            </Row>\n            <BlockMath>{\"\\\\text{Equations}\"}</BlockMath>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ padding: 2 }}>\n              <Col>\n                <Input size=\"small\" style={{ width: 30 }} value={matrix[0][0]} onChange={(value) => this.updateMatrix(0, 0, value)} />\n              </Col>\n              <Col>\n                <InlineMath>\\thickspace x_1 +\\thickspace</InlineMath>\n              </Col>\n              <Col>\n                <Input size=\"small\" style={{ width: 30 }} value={matrix[0][1]} onChange={(value) => this.updateMatrix(0, 1, value)} />\n              </Col>\n              <Col>\n                <InlineMath>\\thickspace x_2</InlineMath>\n                <InlineMath>\\thickspace=\\thickspace</InlineMath>\n              </Col>\n              <Col>\n                <Input size=\"small\" style={{ width: 30 }} value={vector[0]} onChange={(value) => this.updateVector(0, value)} />\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ padding: 2 }}>\n              <Col>\n                <Input size=\"small\" style={{ width: 30 }} value={matrix[1][0]} onChange={(value) => this.updateMatrix(1, 0, value)} />\n              </Col>\n              <Col>\n                <InlineMath>\\thickspace x_1 +\\thickspace</InlineMath>\n              </Col>\n              <Col>\n                <Input size=\"small\" style={{ width: 30 }} value={matrix[1][1]} onChange={(value) => this.updateMatrix(1, 1, value)} />\n              </Col>\n              <Col>\n                <InlineMath>\\thickspace x_2</InlineMath>\n                <InlineMath>\\thickspace=\\thickspace</InlineMath>\n              </Col>\n              <Col>\n                <Input size=\"small\" style={{ width: 30 }} value={vector[1]} onChange={(value) => this.updateVector(1, value)} />\n              </Col>\n            </Row>\n\n            <BlockMath>{\"\\\\text{Definitions}\"}</BlockMath>\n            <BlockMath>{\"A\\\\vec{x} = \\\\vec{b} \\\\ni A = \" + matStr + \"\\\\text{and } \\\\vec{b} = \" + vecStr}</BlockMath>\n            <BlockMath>{\"A^{-1} = \\\\dfrac{1}{ac-bd} \\\\begin{bmatrix}d & -b \\\\\\\\ -c & a \\\\end{bmatrix} \\\\ni A = \\\\begin{bmatrix}a & b \\\\\\\\ c & d \\\\end{bmatrix}\"}</BlockMath>\n            <BlockMath>{\"A\\\\vec{b} = \\\\begin{bmatrix}ae + bf \\\\\\\\ ce + df \\\\end{bmatrix} \\\\ni A = \\\\begin{bmatrix}a & b \\\\\\\\ c & d \\\\end{bmatrix} \\\\text{and } \\\\vec{b} = \\\\begin{bmatrix}e \\\\\\\\ f \\\\end{bmatrix}\"}</BlockMath>\n            <BlockMath>{\"A^{-1}A = 1\"}</BlockMath>\n            <BlockMath>{\"\\\\vec{x} = A^{-1}\\\\vec{b}\"}</BlockMath>\n\n            <BlockMath>{\"\\\\text{Solution}\"}</BlockMath>\n            <BlockMath>{matStr + \"\\\\vec{x} = \" + vecStr}</BlockMath>\n            <BlockMath>{\"A^{-1} = \\\\dfrac{1}{\" + matrix[0][0] + \" \\\\cdot \" + matrix[1][1] + \"-\" + matrix[0][1] + \" \\\\cdot \" + matrix[1][0] + \"} \" +\n              \"\\\\begin{bmatrix}\" + matrix[1][1] + \" & -\" + matrix[0][1] + \" \\\\\\\\ -\" + matrix[1][0] + \" & \" + matrix[0][0] + \" \\\\end{bmatrix}\".replace(\"--\", \"\") +\n              \"= \\\\dfrac{1}{\" + det + \"} \\\\begin{bmatrix}\" + matrix[1][1] + \" & -\" + matrix[0][1] + \" \\\\\\\\ -\" + matrix[1][0] + \" & \" + matrix[0][0] + \" \\\\end{bmatrix}\" +\n              \"= \" + inverseMatStr}</BlockMath>\n            <BlockMath>{\"\\\\vec{x} = \" + inverseMatStr + vecStr + \" = \" +\n              \"\\\\begin{bmatrix}\" + inverseStr[0] + \"\\\\cdot \" + vector[0] + \"+ \" + inverseStr[1] + \"\\\\cdot \" + vector[1] + \" \\\\\\\\ \" + inverseStr[2] + \"\\\\cdot \" + vector[0] + \"+ \" + inverseStr[3] + \"\\\\cdot \" + vector[1] + \" \\\\end{bmatrix}\" +\n              \"= \\\\begin{bmatrix} \" + solStr[0] + \" \\\\\\\\ \" + solStr[1] + \" \\\\end{bmatrix}\"}</BlockMath>\n            <BlockMath>{\"\\\\vec{x} = \\\\begin{bmatrix} \" + solStr[0] + \" \\\\\\\\ \" + solStr[1] + \" \\\\end{bmatrix}\"}</BlockMath>\n            <BlockMath>{\"x_1 = \" + solStr[0] + \"\\\\text{ and } x_2 = \" + solStr[1]}</BlockMath>\n          </div>\n        </Content>\n        <Footer>(C) Quantum Development - 2019</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}